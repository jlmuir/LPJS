#!/bin/sh -e

##########################################################################
#   Script description:
#       Menu for basic LPJS setup
#       
#   History:
#   Date        Name        Modification
#   2021-10-06  J Bacon     Begin
##########################################################################

usage()
{
    printf "Usage: $0\n"
    exit 1
}


##########################################################################
#   Function description:
#       Pause until user presses return
##########################################################################

pause()
{
    local junk
    
    printf "Press return to continue..."
    read junk
}


##########################################################################
#   Function description:
#       Enable dispatchd on this node (make this the head node)
#       
#   History:
#   Date        Name        Modification
#   2023-05-28  Jason Bacon Begin
##########################################################################

dispatchd_enable()
{
    if grep -q '^head' $CONF_FILE; then
	head_node=$(awk '$1 == "head" { print $2 }' $CONF_FILE)
	printf "This node currently lists $head_node as the head node.\n"
	printf "$head_node will be replaced by $(hostname).\n"
	printf "Proceed? y/[n] "
	read proceed
	if [ 0"$proceed" != 0y ]; then
	    break
	fi
    fi
    head_node=$(hostname)
    printf "head    $head_node\n" >> $CONF_FILE.temp
    grep -v '^head' $CONF_FILE >> $CONF_FILE.temp || true
    mv -f $CONF_FILE.temp $CONF_FILE
    munge_enable
    if [ $(uname) = Darwin ]; then
	plist=$(auto-localbase)/share/lpjs/Launchd/org.pkgsrc.lpjs_dispatchd.plist
	if [ -e $plist ]; then
	    auto-enable-service -s $plist org.pkgsrc.lpjs_dispatchd lpjs-admin
	fi
    elif [ $(uname) = Linux ]; then
	script = $(auto-localbase)/share/lpjs/Systemd/lpjs_dispatchd.service
	if [ -e $script ]; then
	    auto-enable-service -s $script lpjs_dispatchd lpjs-admin
	fi
    else
	auto-enable-service lpjs_dispatchd $0
    fi
}


##########################################################################
#   Function description:
#       Enable compd on this node (make this a compute node)
#       
#   History:
#   Date        Name        Modification
#   2023-05-28  Jason Bacon Begin
##########################################################################

compd_enable()
{
    if [ ! -e $CONF_FILE ] || ! grep -q '^head' $CONF_FILE; then
	printf "Host name of head node? "
	read head_node
	printf "head    $head_node\n" >> $CONF_FILE
    else
	head_node=$(awk '$1 == "head" { print $2 }' $CONF_FILE)
    fi
    
    printf "Add 'compute $(hostname)' to $CONF_FILE on $head_node.\n"
    pause
    munge_enable
    if [ $(uname) = Darwin ]; then
	plist=$(auto-localbase)/share/lpjs/Launchd/org.pkgsrc.lpjs_compd.plist
	if [ -e $plist ]; then
	    auto-enable-service -s $plist org.pkgsrc.lpjs_compd lpjs-admin
	fi
    elif [ $(uname) = Linux ]; then
	script = $(auto-localbase)/share/lpjs/Systemd/lpjs_compd.service
	if [ -e $script ]; then
	    auto-enable-service -s $script lpjs_compd lpjs-admin
	fi
    else
	auto-enable-service lpjs_compd $0
    fi
    
    sleep 2
    lpjs nodes
}


##########################################################################
#   Function description:
#       Enable munge daemon
#       
#   History:
#   Date        Name        Modification
#   2023-05-28  Charlie &   Begin
##########################################################################

munge_enable()
{
    munge_key=$(auto-localbase)/etc/munge/munge.key
    if [ -e $munge_key ]; then
	printf "$munge_key already exists.  Update it if necessary.\n"
    else
	printf "Copy munge.key from $head_node to $(auto-localbase)/etc/munge.\n"
    fi
    printf "Permissions should be -rw------- and ownership root:root or root:wheel.\n"
    printf "If they are not, you may have a security breach.\n"
    printf "Current ownership and permissions:\n"
    ls -l $munge_key
    pause

    # FIXME: Make sure pkgsrc service is called "munged"
    if [ -e $(auto-localbase)/etc/rc.d/munged ]; then
	auto-enable-service munged $0
    elif [ $(uname) = Darwin ]; then
	plist=$(auto-localbase)/share/munge/Launchd/org.pkgsrc.munged.plist
	if [ -e $plist ]; then
	    auto-enable-service -s $plist org.pkgsrc.munged lpjs-admin
	fi
    elif [ $(uname) = Linux ]; then
	script = $(auto-localbase)/lib/systemd/system/munge.service
	if [ -e $script ]; then
	    auto-enable-service -s $script munge lpjs-admin
	fi
    else
	printf "Could not find munge RC script.  Enable munge manually\n"
	printf "before continuing.  Press return after munged is running.\n"
	read junk
    fi
}


##########################################################################
#   Main
##########################################################################

if [ $# != 0 ]; then
    usage
fi

CONF_FILE=$(auto-localbase)/etc/lpjs/config

# Prevent user from running a Trojan as root in the case their account
# was compromised
absolute="$(which $0)"
# Don't count on -e being set at this point
if ! auto-file-secure "$absolute"; then
    exit 1
fi

if ! auto-root-check $0; then
    printf "Root "
    # exec quotes '$absolute --flag', causing usage error
    # Assigning to cmd works around the problem
    cmd="$absolute $@"
    exec su -m root -c "$cmd"
fi

: ${EDITOR:=vi}

while true
do
    clear
    lpjs-banner
    cat << EOM

1.. Set up a zero-configuration one-node cluster on this machine
2.. Add a compute node (use this option only on the head node)
3.. Enable dispatch daemon (make this the head node)
4.. Enable compute daemon (make this a compute node)
5.. Restart daemons
6.. Edit config file (advanced users only)
Q.. Quit

EOM

    read -p 'Selection? ' resp
    case 0$resp in
    01)
	dispatchd_enable
	compd_enable
	pause
	;;
    
    02)
	if [ -e $CONF_FILE ]; then
	    printf "$CONF_FILE already exists.  Overwrite? y/[n] "
	    read generate
	else
	    generate=y
	fi
	if [ 0"$generate" = 0y ]; then
	    read -p "Host name of head node? " head_host
	    read -p "Host names of compute nodes (comma-separated) " compute_hosts
	    cat << EOM > $CONF_FILE
head    $head_host
compute $compute_hosts
EOM
	fi
	
	# FIXME: Temporary for debugging
	$EDITOR $CONF_FILE
	
	# FIXME: Is this necessary?  If so, should it be?
	lpjs-restart
	;;

    03)
	dispatchd_enable
	pause
	;;

    04)
	compd_enable
	pause
	;;

    05)
	lpjs-restart
	pause
	;;
    
    06)
	$EDITOR $(auto-localbase)/etc/lpjs/config
	;;
    
    0Q|0q)
	exit 0
	;;

    *)
	printf "Invalid option: $resp\n"
    esac
done
