#!/bin/sh -e

##########################################################################
#   Script description:
#       Menu for basic LPJS setup
#       
#   History:
#   Date        Name        Modification
#   2021-10-06  J Bacon     Begin
##########################################################################

usage()
{
    printf "Usage: $0\n"
    exit 1
}


##########################################################################
#   Function description:
#       Pause until user presses return
##########################################################################

pause()
{
    local junk
    
    printf "Press return to continue..."
    read junk
}


##########################################################################
#   Function description:
#       Enable dispatchd on this node (make this the head node)
#       
#   History:
#   Date        Name        Modification
#   2023-05-28  Jason Bacon Begin
##########################################################################

dispatchd_enable()
{
    if grep -q '^head' $CONF_FILE; then
	head_node=$(awk '$1 == "head" { print $2 }' $CONF_FILE)
	printf "This node currently lists $head_node as the head node.\n"
	printf "$head_node will be replaced by $(hostname).\n"
	printf "Proceed? y/[n] "
	read proceed
	if [ 0"$proceed" != 0y ]; then
	    break
	fi
    fi
    head_node=$(hostname)
    printf "head    $head_node\n" >> $CONF_FILE.temp
    grep -v '^head' $CONF_FILE >> $CONF_FILE.temp || true
    mv -f $CONF_FILE.temp $CONF_FILE
    auto-enable-service lpjs_dispatchd $0
}


##########################################################################
#   Function description:
#       Enable compd on this node (make this a compute node)
#       
#   History:
#   Date        Name        Modification
#   2023-05-28  Jason Bacon Begin
##########################################################################

compd_enable()
{
    if [ ! -e $CONF_FILE ] || ! grep -q '^head' $CONF_FILE; then
	printf "Host name of head node? "
	read head_node
	printf "head    $head_node\n" >> $CONF_FILE
    else
	head_node=$(awk '$1 == "head" { print $2 }' $CONF_FILE)
    fi
    
    printf "Copy munge.key from $head_node to $(auto-localbase)/etc/munge.\n"
    printf "Make sure the permissions are 0600 and ownership is root:0.\n"
    pause
    
    printf "Add 'compute $(hostname)' to $CONF_FILE on $head_node.\n"
    pause
    auto-enable-service lpjs_compd $0
}


##########################################################################
#   Main
##########################################################################

if [ $# != 0 ]; then
    usage
fi

CONF_FILE=$(auto-localbase)/etc/lpjs/config

# Prevent user from running a Trojan as root in the case their account
# was compromised
absolute="$(which $0)"
# Don't count on -e being set at this point
if ! auto-file-secure "$absolute"; then
    exit 1
fi

if ! auto-root-check $0; then
    printf "Root "
    # exec quotes '$absolute --flag', causing usage error
    # Assigning to cmd works around the problem
    cmd="$absolute $@"
    exec su -m root -c "$cmd"
fi

: ${EDITOR:=vi}

while true
do
    clear
    lpjs-banner
    cat << EOM

1.. Set up a zero-configuration one-node cluster on this machine
2.. Generate configuration file (Usually done only on head node, or by SPCM)
3.. Copy configuration file from head node (typically done by SPCM)
4.. Edit config file
5.. Enable dispatch daemon (make this the head node)
6.. Enable compute daemon (make this a compute node)
7.. Restart daemon
Q.. Quit

EOM

    read -p 'Selection? ' resp
    case 0$resp in
    01)
	dispatchd_enable
	compd_enable
	pause
	;;
    
    02)
	if [ -e $CONF_FILE ]; then
	    printf "$CONF_FILE already exists.  Overwrite? y/[n] "
	    read generate
	else
	    generate=y
	fi
	if [ 0"$generate" = 0y ]; then
	    read -p "Host name of head node? " head_host
	    read -p "Host names of compute nodes (comma-separated) " compute_hosts
	    cat << EOM > $CONF_FILE
head    $head_host
compute $compute_hosts
EOM
	fi
	$EDITOR $CONF_FILE
	;;

    03)
	read -p 'Host name of head node? ' head_host
	read -p 'Username for ssh to head node (usually ssh does not accept root)? ' user_name
	if [ -e $CONF_FILE ]; then
	    printf "$CONF_FILE already exists.  Overwrite? y/[n] "
	    read overwrite
	else
	    overwrite=y
	fi
	if [ 0"$overwrite" = 0y ]; then
	    remote_conf=$(ssh $user_name@$head_host auto-localbase)/etc/lpjs/config
	    #echo $remote_conf
	    scp $user_name@$head_host:$remote_conf $CONF_FILE
	fi
	pause
	;;
    
    04)
	$EDITOR $(auto-localbase)/etc/lpjs/config
	;;
    
    05)
	dispatchd_enable
	pause
	;;

    06)
	compd_enable
	pause
	;;

    07)
	# FIXME: Maybe make auto-service-restart wrapper for portability
	if auto-service-enabled lpjs_compd; then
	    service lpjs_compd restart;
	fi
	if auto-service-enabled lpjs_dispatchd; then
	    service lpjs_dispatchd restart;
	fi
	pause
	;;
    
    0Q|0q)
	exit 0
	;;

    *)
	printf "Invalid option: $resp\n"
    esac
done
