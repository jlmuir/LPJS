#!/bin/sh -e

##########################################################################
#   Function description:
#       Pause until user presses return
##########################################################################

pause()
{
    local junk
    
    printf "Press return to continue..."
    read junk
}


##########################################################################
#   Description:
#       Enable munge daemon
#
#   FIXME: Move this functionality to auto-admin?
#       
#   History:
#   Date        Name        Modification
#   2023-05-28  Charlie &   Begin
##########################################################################

munge_key=$(auto-localbase)/etc/munge/munge.key
if [ -e $munge_key ]; then
    printf "$munge_key already exists.  Update it if necessary.\n"
    pause
else
    valid=no
    while [ $valid != yes ]; do
	cat << EOM

The munge authentication service requires a key in $munge_key,
which must be identical on computers in this cluster/grid.  The file
is not present on this computer.  Please choose from the following options
to install the key file:

1.. Generate new munge key for this cluster/grid
2.. Automatically and securely scp munge key from another system
3.. Pause this script and manually install munge key from elsewhere

EOM
	printf "Selection? "
	read selection
	
	case 0"$selection" in
	01)
	    if mungekey; then
		valid=yes
	    fi
	    ;;
	
	02)
	    valid=yes
	    printf "Hostname of computer with munge key? "
	    read host_name
	    cat << EOM

Enter the username of a user that exists on both $host_name
and $(hostname), and has permission to "su" to root.
On BSD and some Linux systems, this user must be a member of the
root or wheel group.

This user cannot be "root".  Secure systems do not accept remote logins
as the root user.

You will need to enter the root password for $host_name
and possibly the user's password for $(hostname).

EOM
	    printf "Username? "
	    read user_name
	    set +e
	    remote_localbase=$(ssh $user_name@$host_name auto-localbase)
	    ssh -t $user_name@$host_name asroot \
		scp -p $remote_localbase/etc/munge/munge.key $user_name@$(hostname):
	    # sh does not support ~ on all platforms
	    if [ $(uname) = Darwin ]; then
		# sh hard-quotes ~$user_name
		# eval cleans up the cmd before executing
		eval mv ~$user_name/munge.key $munge_key
	    else
		user_home=$(awk -F : -v u=$user_name '$1 == u { print $6 }' /etc/passwd)
		mv $user_home/munge.key $munge_key
	    fi
	    set -e
	    if chown root:0 $munge_key && chmod 600 $munge_key; then
		valid=yes
	    fi
	    ;;
	
	03)
	    printf "Securely copy your key file to $munge_key.\n"
	    printf "Ensure that it it not readable to ordinary users at any time.\n"
	    pause
	    valid=yes
	    if chown root:0 $munge_key && chmod 600 $munge_key; then
		valid=yes
	    fi
	    ;;
	
	*)
	    printf "Invalid selection.\n" >> /dev/stderr
	    ;;
	
	esac
	pause
    done
fi


printf "Permissions should be -rw-------\n"
printf "and ownership root:root or root:wheel or munge:munge.\n"
printf "If they are not, you may have a security breach.\n"
printf "Current ownership and permissions:\n"
ls -al $(auto-localbase)/etc/munge 
pause

# FIXME: Make sure pkgsrc service is called "munged"?
if [ -e $(auto-localbase)/etc/rc.d/munged ]; then
    # Dragonfly, FreeBSD
    auto-enable-service munged $0
elif [ $(uname) = Darwin ]; then
    pksrc_perms
    # On macOS, we must install the plist file ourselves
    plist=$(auto-localbase)/share/munge/Launchd/org.pkgsrc.munged.plist
    if [ -e $plist ]; then
	auto-enable-service -s $plist org.pkgsrc.munged lpjs-admin
    fi
elif [ $(uname) = Linux ]; then
    # On Linux, systemctl creates a link to the service file
    script=$(auto-localbase)/lib/systemd/system/munge.service
    if [ -e $script ]; then
	auto-enable-service -s $script munge lpjs-admin
    fi
elif [ $(uname) = NetBSD ]; then
    # On NetBSD, pkgsrc installs/deinstalls the RC files, but they are
    # named munge rather than munged
    auto-enable-service munge $0
elif [ $(uname) = SunOS ]; then
    # FIXME: The SunOS init scripts are not working yet
    # FIXME: Can we enable an init script directly under $(auto-localbase)?
    # FIXME: Add SunOS support to auto-enable-service
    cp $(auto-localbase)/etc/init.d/munge /etc/init.d
    /etc/init.d/munge restart
else
    printf "Could not find munge RC script.  Enable munge manually\n"
    printf "before continuing.  Press return after munged is running.\n"
    read junk
fi
