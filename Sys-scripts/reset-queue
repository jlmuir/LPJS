#!/bin/sh -e

##########################################################################
#   Title:
#       lpjs-reset-queue
#
#   Section:
#       8
#
#   Synopsis:
#       lpjs reset-queue
#       
#   Description:
#       lpjs reset-queue removes all pending and running jobs from
#       the spool directories, and resets the next job ID to 1.
#
#       It is only meant to be used by developers to clean up
#       test jobs during debugging, or by sysadmins while setting up
#       a new cluster.
#       
#   Arguments:
#       None
#       
#   Returns:
#       0 upon success, non-zero error codes otherwise
#
#   See also:
#       lpjs-clear-queue(1), lpjs-admin(1)
#       
#   History:
#   Date        Name        Modification
#   2024-02-20  Jason Bacon Begin
##########################################################################

usage()
{
    printf "Usage: $0\n"
    exit 1
}


##########################################################################
#   Main
##########################################################################

if [ $# != 0 ]; then
    usage
fi
prefix=/usr/local
if [ ! -e $prefix/var/spool/lpjs ]; then
    exit 0
fi

if [ ! -w $prefix/var/spool/lpjs ]; then
    # Prevent user from running a Trojan as root in the case their account
    # was compromised
    absolute="$(which $0)"
    # Don't count on -e being set at this point
    if ! auto-file-secure "$absolute"; then
	exit 1
    fi
    
    if ! auto-root-check $0; then
	printf "Root "
	# exec quotes '$absolute --flag', causing usage error
	# Assigning to cmd works around the problem
	cmd="$absolute $@"
	exec su -m root -c "$cmd"
    fi
fi

cat << EOM

********************************* WARNING *********************************

The purpose of this command is to erase all previous job history and
restart the job ID sequence.

This will remove all pending jobs and reset the next job number to 1
in $prefix/var/spool/lpjs.

All job IDs from previously completed jobs will become redundant, as
they will be reused for future jobs.

This should generally only be done to remove test jobs during installation
of a new cluster.  Once the cluster is opened for business, job IDs
should be left intact.

EOM
printf "Are you sure you want to do this?  yes/[no] "
read sure
if [ 0"$sure" = 0yes ]; then
    # FIXME: Just run clear-queue and then reset the job id?
    if [ $(id -u) = 0 ]; then
	lpjs stop || true
    fi
    rm -rf $prefix/var/spool/lpjs/pending/*
    rm -rf $prefix/var/spool/lpjs/running/*
    printf "1\n" > $prefix/var/spool/lpjs/next-job
    
    printf "\n$prefix/var/spool/lpjs/pending:\n"
    ls -al $prefix/var/spool/lpjs/pending
    printf "\n$prefix/var/spool/lpjs/running:\n"
    ls -al $prefix/var/spool/lpjs/running
    printf "\n$prefix/var/spool/lpjs/next-job:\n"
    cat $prefix/var/spool/lpjs/next-job
    if [ $(id -u) = 0 ]; then
	lpjs start || true
    fi
else
    printf "Reset canceled.\n"
fi
